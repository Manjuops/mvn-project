name: Maven and DB CI/CD

on:
  push:
    branches:
      - main  # Trigger on pushes to main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'        # Specifies the Java version to install
          distribution: 'adopt'     # Specifies the distribution of Java (e.g., adopt, openjdk, zulu)
          java-package: 'jdk'       # Specifies the Java package to install
          architecture: 'x64'       # Specifies the architecture (x64 or x86)
          server-id: 'github'       # Specifies the server ID (e.g., github)
          server-username: ${{ github.actor }}   # Use GITHUB_ACTOR as server username
          server-password: ${{ github.token }}   # Use GITHUB_TOKEN as server password
          overwrite-settings: true  # Overwrite existing settings.xml (if any)
          job-status: 'success'  

      - name: Build Maven project
        run: mvn -B package --file pom.xml

      - name: Docker Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: mrepo.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Maven Docker image
        run: |
          docker build . -t mrepo.azurecr.io/maven:v1
          docker push mrepo.azurecr.io/maven:v1

      - name: Build and push DB Docker image
        run: |
          docker build -f Dockerfile.mysql -t mrepo.azurecr.io/db:v2 .
          docker push mrepo.azurecr.io/db:v2

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensure build-and-push job completes successfully before starting deploy-to-aks job

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          allow-no-subscriptions: true
          enable-AzPSSession: true

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group m --name Gcluster

      - name: Update Maven deployment in AKS
        run: |
          kubectl set image deployment/maven-deployment maven=mrepo.azurecr.io/maven:v1

      - name: Update DB deployment in AKS
        run: |
          kubectl set image deployment/db-deployment db=mrepo.azurecr.io/db:v2
